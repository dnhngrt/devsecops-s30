name: DevSecOps Workflow

on:
  push:
    branches: [ main ]
  pull_request: {}

jobs:
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - run: pip install -r requirements.txt
      - run: python -m pytest

  sast_bandit:
    name: SAST (Bandit)
    runs-on: ubuntu-latest
    needs: [unit_test]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit
      - name: Run bandit
        run: |
          bandit -r app -f json -o bandit-report.json --exit-zero
  sca_pip_audit:
    name: SCA (pip-audit)
    runs-on: ubuntu-latest
    needs: [unit_test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - run: pip install pip-audit
      - run: pip-audit

  secret_scan:
    name: Secret Scan (Gitleaks)
    runs-on: ubuntu-latest
    needs: [unit_test]
    steps:
      - uses: actions/checkout@v4

      - name: Gitleaks Scan
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--no-banner --report-format json --report-path gitleaks.json --exit-code 1"

  build_and_push:
    needs: [unit_test, sast_bandit, sca_pip_audit, secret_scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:latest .
      - run: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:latest ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:${{ github.sha }}
      - run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:latest
      - run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/notes-app:${{ github.sha }}

  image_scan:
    needs: build_and_push
    name: Scan Docker image with Trivy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: dnhngrt/notes-app:latest
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
